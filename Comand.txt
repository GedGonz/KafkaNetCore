
//CORRE EL CONTENEDOR CON Y ASIGNA LA RED PARA QUE SE VINCULE CON EL CONTENEDOR KAFKA

//CONTAINER ORDENES
docker run --network=kafka -it --name=orders orders

//CONATINER COSTUMER

docker run --network=kafka -it --name=costumer costumer

//COMANDO BASICOS
--Corre un contenedor
docker run -t 'nombre_iamgen' --name='nombre_container'

--lista las imagenes creadas
docker images 

--eliminar una imagen
docker image rm 'nombre_imagen'

--muestra los contenedores corriendo
docker ps

--crea una red
docker network create 'nombre_red'

--eliminar una red
docker network rm 'nombre_red'

--lista las redes
docker network ls

--DOCKER-COMPOSE
--corre un docker compose(tiene que estar ubicada 
en la carpeta donde se encuentra el archivo con extensio yml)

docker-compose up 

--contruye un docker-compose
docker-compose build


--LEVANTA ZOOKEEPER DESDE EL CONTENEDOR

docker run -d -p 2181:2181 --env ZOOKEEPER_CLIENT_PORT=2181 --env ZOOKEEPER_TICKET_TIME=2000 --network=kafka --name=zookeeper confluentinc/cp-zookeeper:5.5.4

--LEVANTA KAFKA DESDE EL CONTENEDOR

docker run -d -p 9092:9092 --env KAFKA_ZOOKEEPER_CONNECT="zookeeper:2181" --env KAFKA_ADVERTISED_HOST_NAME="kafka" --env KAFKA_ADVERTISED_LISTENERS="INTERNAL://kafka:29092,EXTERNAL://localhost:9092" --env KAFKA_LISTENER_SECURITY_PROTOCOL_MAP="INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT" --env KAFKA_LISTENERS="INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092" --env KAFKA_INTER_BROKER_LISTENER_NAME="INTERNAL" --env KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR="1" --network=kafka --name=kafka confluentinc/cp-kafka:5.5.4